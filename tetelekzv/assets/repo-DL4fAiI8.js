import{aN as a}from"./index-BT5olunS.js";async function i(){const t=await a.get("/tetel/get/get_tetel_list.php");if(!Array.isArray(t.data))throw new Error("Expected an array of tetelek, received: "+JSON.stringify(t.data));return t.data}async function o(t){const e=await a.get(`/tetel/get/get_tetel_details.php?id=${t}`);if(!e.data||typeof e.data!="object")throw new Error("Expected a tetel details object, received: "+JSON.stringify(e.data));return e.data}async function u(t){await a.delete("/tetel/post/delete_tetel.php",{data:{id:t}})}async function c(t,e){if((await a.post(`/tetel/post/update_tetel.php?id=${t}`,e)).status!==200)throw new Error("Failed to update tetel")}async function d(t){if((await a.post("/tetel/post/create_tetel.php",t)).status!==200)throw new Error("Failed to create tetel")}async function p(t){return(await a.post("/multiquestion/post/create_multiquestion.php",t,{headers:{"Content-Type":"application/json"}})).data}async function l(t,e){return isNaN(t)?(console.warn("❌ updateMultiQuestion called with invalid id:",t),{success:!1}):(await a.post(`/multiquestion/post/update_multiquestion.php?id=${t}`,e,{headers:{"Content-Type":"application/json"}})).data}async function f(t){if(!(await a.delete("/multiquestion/post/delete_multiquestion.php",{data:{id:t},headers:{"Content-Type":"application/json"}})).data.success)throw new Error("A kérdés törlése nem sikerült.")}async function h({page:t=1,limit:e=35}){const s=await a.get("/multiquestion/get/get_multiquestion_list.php",{params:{page:t,limit:e}});if(!s.data||!Array.isArray(s.data.data))throw new Error("Unexpected response from backend");return s.data}async function w(t){const e=await a.get(`/multiquestion/get/get_multiquestion_details.php?id=${t}`);if(!e.data||typeof e.data!="object")throw new Error("Expected a multiquestion object, received: "+JSON.stringify(e.data));return e.data}async function y(){return(await a.get("/multiquestion/get/get_multiquestion.php")).data}async function g(){return(await a.get("/tetel/get/get_random_flashcard.php")).data}async function m(t,e){return(await a.post("/auth/register.php",{username:t,password:e})).data}async function _(t,e,s){return(await a.post("/auth/update_password.php",{current_password:t,password:e,password_confirmation:s})).data}export{p as a,h as b,d as c,y as d,g as e,i as f,u as g,o as h,f as i,w as j,c as k,l,m as r,_ as u};
